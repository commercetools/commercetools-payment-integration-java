name: CD

on:
  push:
    tags:
      - '*.*.*'

jobs:
  tests:
    name: tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: serializing workflow runs
        uses: softprops/turnstyle@v1
        with:
          same-branch-only: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Install heroku cli
        run: |
          curl --silent --show-error --fail -O  https://cli-assets.heroku.com/install.sh
          sudo chmod u+x install.sh
          ./install.sh
        shell: bash
      - name: Restart Heroku
        run: heroku ps:restart --app ct-payment-integration-java
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      - name: Build with Gradle
        run: ./gradlew --info build
        env:
          CT_PROJECT_KEY:  project-payment-21
          CT_CLIENT_ID: ${{ secrets.CT_CLIENT_ID }}
          CT_CLIENT_SECRET: ${{ secrets.CT_CLIENT_SECRET }}
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          CT_PAYONE_INTEGRATION_URL: https://ct-payment-integration-java.herokuapp.com/PAYMENT/commercetools/handle/payments/

  deployment:
    name: deployment
    needs: tests
    runs-on: ubuntu-latest
    env:
      GRGIT_USER: ${{ secrets.GRGIT_USER }}
    steps:
      - name: Git Checkout
        uses: actions/checkout@v2
      - name: Set output
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: Set up Java
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: status
        run: echo Build is tagged. Uploading artifact ${{ steps.vars.outputs.tag }} to maven central.
      - name: deploy to sonatype and publish to maven central
        run: ./gradlew -Dbuild.version="${{ steps.vars.outputs.tag }}" publishToSonatype closeAndReleaseSonatypeStagingRepository
        env:
          GITHUB_TAG: ${{ steps.vars.outputs.tag }}
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
          PGP_KEY: ${{ secrets.PGP_KEY }}
          PGP_PASSWORD: ${{ secrets.PGP_PASSWORD }}
      - name: Slack notification
        if: success() # only when previous step succeeds
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_USERNAME: Github Release Action.
          SLACK_CHANNEL: payment
        uses: Ilshidur/action-slack@master
        with:
          args: 'Version: <https://github.com/commercetools/commercetools-payment-integration-java/releases/tag/${{ steps.vars.outputs.tag }}|${{ steps.vars.outputs.tag }}> of the commercetools-payment-integration-java library has been published to the <https://repo1.maven.org/maven2/com/commercetools/payment/|Maven Central>.'
